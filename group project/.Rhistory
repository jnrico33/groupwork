gpa%>%
skimr::skim()
gpa %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2<- gpa%>%
na.omit(gpa)
gpa2 %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2$year<- as.factor(gpa2$year)
gpa2
#This dataset shows the term 1 and term 2 grades for students by year. Term 1 represents progress grades and term 2 is the final semester grade. I removed the NA's that were present in the form of no values. These values coincided with students either withdrawing prior to receiving their posted grades or enrolling with less than 20 days between their enrollment and the grading period.
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
#write.csv(gpa_2_long, "gpa_2_long.csv")
attreason <- readr::read_csv("att_reason_reports.csv")
attreason
attcodes<- attreason%>%
pivot_longer(-year, names_to = "att_code", values_to = "occurence")
attcodes$year<- as.factor(attcodes$year)
attcodes
#This dataset shows the usage of attendance codes by year. These attendance codes are used when we enter the reason behind an absence. Some, such as DR, ILL, are excused while others like UNV, and VUN are not excused. These factor in when it comes to determining our attendance percentages. The codes ILL19, AVP, NWFA, DAC, and NCA are codes introduced due to the pandemic.
virtualed <- merge(attrates, codesmonth,by="year")
virtualed
attrates
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(month==input$x & number_of_students==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Attendance Rates, Enrollment and Withdrawal Data by Month"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates", "Enrollment and Withdrawal Data by Month", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
virtualed %>%
filter(month.x==input$x & attendance_rate_percent==input$y) %>%
ggplot(aes(x=month.x, fill=year)) +
geom_histogram()+
#facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Month", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(rmarkdown)
library(shiny)
library(shinydashboard)
library(skimr)
library(janitor)
library(here)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(naniar)
library(dplyr)
library(ggpubr)
options(scipen=999)
test<- readr::read_csv("1920 attendance rates.csv")
test
attrates<- readr::read_csv("att_rates.csv")
attrates
#This dataset shows the percent of student attendance for attendance months 1-5 by year. This also shows the number of students that both enrolled and withdrew from the school site in each of these months along with the total number of enrollment at each of these months.
attrates<- janitor::clean_names(attrates)
attrates$year<- as.factor(attrates$year)
attrates
gpa<- readr::read_csv("term_gpas.csv")
gpa<- janitor::clean_names(gpa)
gpa
gpa%>%
skimr::skim()
gpa %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2<- gpa%>%
na.omit(gpa)
gpa2 %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2$year<- as.factor(gpa2$year)
gpa2
#This dataset shows the term 1 and term 2 grades for students by year. Term 1 represents progress grades and term 2 is the final semester grade. I removed the NA's that were present in the form of no values. These values coincided with students either withdrawing prior to receiving their posted grades or enrolling with less than 20 days between their enrollment and the grading period.
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
#write.csv(gpa_2_long, "gpa_2_long.csv")
attreason <- readr::read_csv("att_reason_reports.csv")
attreason
attcodes<- attreason%>%
pivot_longer(-year, names_to = "att_code", values_to = "occurence")
attcodes$year<- as.factor(attcodes$year)
attcodes
#This dataset shows the usage of attendance codes by year. These attendance codes are used when we enter the reason behind an absence. Some, such as DR, ILL, are excused while others like UNV, and VUN are not excused. These factor in when it comes to determining our attendance percentages. The codes ILL19, AVP, NWFA, DAC, and NCA are codes introduced due to the pandemic.
virtualed <- merge(attrates, codesmonth,by="year")
virtualed
attrates
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(month==input$x & number_of_students==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
attjoined
runApp('GPA_Shiny_App')
runApp('GPA_Shiny_App')
attjoined
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
n_distinct(attjoined$code)
n_distinct(attjoined$code)
attjoined$code <- as.factor(attjoined$code)
codesmonth<- readr::read_csv("ATTENDANCE CODES BY MONTH.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth
attrates
attrates
attrates$month <- as.factor(attrates$month)
attrates$month <- as.factor(attrates$month)
attrates
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
attjoined
attjoined<- inner_join(attrates, codesmonth,by=c("month", "year"))
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
codesmonth<- readr::read_csv("ATTENDANCE CODES BY MONTH.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth$month <- as.factor(codesmonth$month)
codesmonth
attjoined<- inner_join(attrates, codesmonth,by=c("month", "year"))
codesmonth<- readr::read_csv("ATTENDANCE CODES BY MONTH.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth$month <- as.factor(codesmonth$month)
codesmonth$year <- as.factor(codesmonth$year)
codesmonth
attjoined<- inner_join(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
codesmonth %>%
pivot_wider(
names_from = "code",
values_from = "used"
)
codesmonth_wide <- codesmonth %>%
pivot_wider(
names_from = "code",
values_from = "used"
)
codesmonth_wide <- codesmonth %>%
pivot_wider(
names_from = "code",
values_from = "used"
)
codesmonth_wide
inner_join(attrates, codesmonth_wide, by=c("year","month"))
attjoined <- inner_join(attrates, codesmonth_wide, by=c("year","month"))
glimpse(attjoined)
attjoined %>%
select(month, year, number_of_students)
attjoined %>%
ggplot(aes(x=month, y=number_of_students, group=year))+
geom_col()
attjoined %>%
ggplot(aes(x=month, y=number_of_students, fill=year))+
geom_col()
attjoined %>%
ggplot(aes(x=month, y=number_of_students, fill=year))+
geom_col(position = "dodge")
attjoined %>%
ggplot(aes(x=month, y=student_add, fill=year))+
geom_col(position = "dodge")
attjoined %>%
ggplot(aes(x=month, y=student_drop, fill=year))+
geom_col(position = "dodge")
attjoined %>%
ggplot(aes(x=code, y=month, fill=year))+
geom_col(position = "dodge")
attjoined
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
)
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
) %>%
select(attendance_code, occurences)
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
) %>%
filter(year=2019) %>%
select(attendance_code, occurences)
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
) %>%
filter(year==2019) %>%
select(attendance_code, occurences)
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
) %>%
filter(year==2019) %>%
select(attendance_code, occurences) %>%
group_by(attendance_code)
attjoined %>%
pivot_longer(
7:17,
names_to="attendance_code",
values_to="occurences"
) %>%
filter(year==2019) %>%
select(attendance_code, occurences) %>%
group_by(attendance_code) %>%
summarise(n=sum(occurences))
runApp('GPA_Shiny_App')
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
#write.csv(gpa_2_long, "gpa_2_long.csv")
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(rmarkdown)
library(shiny)
library(shinydashboard)
library(skimr)
library(janitor)
library(here)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(naniar)
library(dplyr)
library(ggpubr)
options(scipen=999)
test<- readr::read_csv("1920 attendance rates.csv")
test
attrates<- readr::read_csv("att_rates.csv")
attrates
#This dataset shows the percent of student attendance for attendance months 1-5 by year. This also shows the number of students that both enrolled and withdrew from the school site in each of these months along with the total number of enrollment at each of these months.
attrates<- janitor::clean_names(attrates)
attrates$year<- as.factor(attrates$year)
attrates
gpa<- readr::read_csv("term_gpas.csv")
gpa<- janitor::clean_names(gpa)
gpa
gpa%>%
skimr::skim()
gpa %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2<- gpa%>%
na.omit(gpa)
gpa2 %>%
group_by(year) %>%
summarise_all(~(sum(is.na(.))))
gpa2$year<- as.factor(gpa2$year)
gpa2
#This dataset shows the term 1 and term 2 grades for students by year. Term 1 represents progress grades and term 2 is the final semester grade. I removed the NA's that were present in the form of no values. These values coincided with students either withdrawing prior to receiving their posted grades or enrolling with less than 20 days between their enrollment and the grading period.
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
#write.csv(gpa_2_long, "gpa_2_long.csv")
attreason <- readr::read_csv("att_reason_reports.csv")
attreason
attcodes<- attreason%>%
pivot_longer(-year, names_to = "att_code", values_to = "occurence")
attcodes$year<- as.factor(attcodes$year)
attcodes
#This dataset shows the usage of attendance codes by year. These attendance codes are used when we enter the reason behind an absence. Some, such as DR, ILL, are excused while others like UNV, and VUN are not excused. These factor in when it comes to determining our attendance percentages. The codes ILL19, AVP, NWFA, DAC, and NCA are codes introduced due to the pandemic.
virtualed <- merge(attrates, codesmonth,by="year")
virtualed
attrates
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
codesmonth<- readr::read_csv("ATTENDANCE CODES BY MONTH.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth$month <- as.factor(codesmonth$month)
codesmonth$year <- as.factor(codesmonth$year)
codesmonth_wide <- codesmonth %>%
pivot_wider(
names_from = "code",
values_from = "used"
)
codesmonth_wide
attjoined <- inner_join(attrates, codesmonth_wide, by=c("year","month"))
