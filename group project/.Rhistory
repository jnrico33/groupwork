p2+theme_classic()+
theme(axis.text.x = element_text(angle = 90, hjust=1, size = 8))+
labs(title = "Number of Times Attendance Codes Used by Month and Year",
x = "Attendance Code",
y= "Number of Times Used")
p2+theme_light()+
theme(axis.text.x = element_text(angle = 90, hjust=1, size = 8))+
labs(title = "Number of Times Attendance Codes Used by Month and Year",
x = "Attendance Code",
y= "Number of Times Used")
attrates_long <- readr::read_csv("attrateslong.csv")
attrates_long <- readr::read_csv("attrateslong.csv")
attrates_long <- readr::read_csv("Attendance_Rates_Shiny"/"attrateslong.csv")
attrates_long <- readr::read_csv("Attendance_Rates_Shiny"\"attrateslong.csv")
attrates_long <- readr::read_csv("Attendance_Rates_Shiny","attrateslong.csv")
runApp('Attendance_Rates_Shiny')
library(tidyverse)
library(rmarkdown)
library(shiny)
library(shinydashboard)
library(skimr)
library(janitor)
library(here)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(naniar)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(here)
options(scipen=999)
here()
setwd("C:/Users/Jessica/Desktop/groupwork/group project")
here()
getwd()
here::here()
here::here()
attrates_long <- readr::read_csv("attrateslong.csv")
attrates_long <- readr::read_csv("attrateslong.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "Attendance Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates, Enrollment and Withdrawal Data by Month", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates_long %>%
filter(attendance_statistic==input$x) %>%
ggplot(aes(x=month, y=value)) +
geom_col(color="black", fill="darkcyan", alpha=.5)+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
labs(x="Month",y="Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(palmerpenguins)
runApp("plot_iris.R")
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui, server)
names(penguins)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
reactive({input$x
input$y})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point() + theme_light(base_size = 18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:",
choices=unique(homerange$taxon)),
hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot")
)
)
)
# define a server for the Shiny app
server <- function(input, output) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
options(scipen = 999)
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California Admissions"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("Academic_Yr", "Campus", "Category"), selected = "Academic_Yr"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity!="All") %>%
ggplot(aes_string(x = "Ethnicity", y = "FilteredCountFR", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "University of California Admissions", x="Ethnicity", y="Number Students Admitted", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("Campus", "Category", "Ethnicity"), selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "Academic_Yr", y = "FilteredCountFR", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "University of California Admissions", x="Academic Year", y="Number Students Admitted", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
attrates_long <- readr::read_csv("attrateslong.csv")
attrates_long
attrates_long2 <- readr::read_csv("attrateslong.csv")
attrates_long<- attrates_long2%>%
rename(attendance_rate_percent= "Attendance Rate", student_add="Enrollment", student_drop="Withdrawals")
attrates_long2 <- readr::read_csv("attrateslong.csv")
attrates_long<- attrates_long2%>%
rename(attrates_long2$attendance_rate_percent= "Attendance Rate", attrates_long2$student_add="Enrollment", attrates_long2$student_drop="Withdrawals")
setwd("C:/Users/Jessica/Desktop/BIS15W2021_ibluestein/Final Project")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(RColorBrewer)
library(naniar)
library(ggthemes)
options(scipen=999)
turtles <- readr::read_csv(here("Final Project", "Data", "pop_survey_tagging_data.csv")) %>% clean_names()
setwd("C:/Users/Jessica/Desktop/BIS15W2021_ibluestein/Final Project")
turtles <- readr::read_csv(here("Final Project", "Data", "pop_survey_tagging_data.csv")) %>% clean_names()
attrates_long <- readr::read_csv("attrateslong.csv")
setwd("C:/Users/Jessica/Desktop/groupwork/group project")
attrates_long <- readr::read_csv("attrateslong.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "Attendance Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates, Enrollment and Withdrawal Data by Month", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates_long %>%
filter(attendance_statistic==input$x) %>%
ggplot(aes(x=month, y=value)) +
geom_col(color="black", fill="darkcyan", alpha=.5)+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
labs(x="Month",y="Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
#This shinyApp shows the attendance rates, enrollment and withdrawals by month and year. At first sight, there does not appear to be many differences between the two years. We decided to do a deeper analysis into the attendance rates that are used to determine the actual attendance rates.
p<- codesmonth%>%
ggplot(aes(x=code, y=used, fill=code))+
geom_col()+
facet_grid(year~month)
p+theme_light()+
theme(axis.text.x = element_text(angle = 90, hjust=1, size = 8))+
labs(title = "Number of Times Attendance Codes Used by Month and Year",
x = "Attendance Code",
y= "Number of Times Used")
codessubset<- subset(codesmonth, code==c("AVP","UNV"))
codessubset
codessubset<- subset(codesmonth, code==c("AVP","UNV"))
p2<- codessubset%>%
ggplot(aes(x=code, y=used, fill=year))+
geom_col(position="dodge")
p2+theme_pander()+
theme(axis.text.x = element_text(angle = 0, hjust=1))+
labs(title = "Attendance Codes Used in First Semester by Year",
x = "Attendance Code",
y= "Number of Times Used",
fill= "Year")
gpa_2_long <- readr::read_csv("gpa_2_long.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "1"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2019"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa_2_long %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_density(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
attrates_long <- readr::read_csv("attrateslong.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "Attendance Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates, Enrollment and Withdrawal Data by Month", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates_long %>%
filter(attendance_statistic==input$x) %>%
ggplot(aes(x=month, y=value)) +
geom_col(color="black", fill="darkcyan", alpha=.5)+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
labs(x="Month",y="Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
#This shinyApp shows the attendance rates, enrollment and withdrawals by month and year. At first sight, there does not appear to be many differences between the two years. We decided to do a deeper analysis into the attendance rates that are used to determine the actual attendance rates.
gpa_2_long <- readr::read_csv("gpa_2_long.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "1"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2019"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa_2_long %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_density(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
#Term 1 represents progress report grades and Term 2 is the final semester grade received. This shinyApp shows the trends for each grade level by term and year.
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(rmarkdown)
library(shiny)
library(shinydashboard)
library(skimr)
library(janitor)
library(here)
library(RColorBrewer)
library(paletteer)
library(ggthemes)
library(naniar)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(here)
options(scipen=999)
attrates<- readr::read_csv("data/att_rates.csv")
attrates<- janitor::clean_names(attrates)
attrates$year<- as.factor(attrates$year)
attrates$month<- as.factor(attrates$month)
attrates
#This data set shows the percent of student attendance for attendance months 1-5 by year. This also shows the number of students that both enrolled and withdrew from the school site in each of these months along with the total number of enrollment at each of these months. (Note: the months are attendance months rather than calendar months)
attrates_long <- attrates %>%
pivot_longer(
3:6,
names_to="attendance_statistic",
values_to="value"
)
attrates_long
#write.csv(attrates_long, "data/attrateslong.csv")
attreason <- readr::read_csv("data/att_reason_reports.csv")
attreason
attcodes<- attreason%>%
pivot_longer(-year, names_to = "att_code", values_to = "occurence")
attcodes$year<- as.factor(attcodes$year)
attcodes
#This dataset shows the usage of attendance codes by year. These attendance codes are used when we enter the reason behind an absence. Some, such as DR, ILL, are excused while others like UNV, and VUN are not excused. These factor in when it comes to determining our attendance percentages. The codes ILL19, AVP, NWFA, DAC, and NCA were introduced for virtual/distance learning due to the pandemic.
codesmonth<- readr::read_csv("data/attendance codes by month.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth$month <- as.factor(codesmonth$month)
codesmonth$year <- as.factor(codesmonth$year)
codesmonth
#This dataset shows the usage of attendance codes by month and year rather than showing the total counts for each code by year (as seen above in "attcodes").
codesmonth_wide <- codesmonth %>%
pivot_wider(
names_from = "code",
values_from = "used"
)
codesmonth_wide
codes_summary <- codesmonth%>%
group_by(code, year)%>%
summarise(total=sum(used))
attrates_long <- readr::read_csv("attrateslong.csv")
attrates_long <- readr::read_csv("attrateslong.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "Attendance Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates, Enrollment and Withdrawal Data by Month", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates_long %>%
filter(attendance_statistic==input$x) %>%
ggplot(aes(x=month, y=value)) +
geom_col(color="black", fill="darkcyan", alpha=.5)+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
labs(x="Month",y="Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
#This shinyApp shows the attendance rates, enrollment and withdrawals by month and year. At first sight, there does not appear to be many differences between the two years. We decided to do a deeper analysis into the attendance rates that are used to determine the actual attendance rates.
p<- codesmonth%>%
ggplot(aes(x=code, y=used, fill=code))+
geom_col()+
facet_grid(year~month)
p+theme_light()+
theme(axis.text.x = element_text(angle = 90, hjust=1, size = 8))+
labs(title = "Number of Times Attendance Codes Used by Month and Year",
x = "Attendance Code",
y= "Number of Times Used")
#Here we can see a comparison of the number of times that each attendance code was used by month and year. The high number of AVP's immediately stands out. These are the main type of unexcused absence for the year 2020.
codessubset<- subset(codesmonth, code==c("AVP","UNV"))
p2<- codessubset%>%
ggplot(aes(x=code, y=used, fill=year))+
geom_col(position="dodge")
p2+theme_pander()+
theme(axis.text.x = element_text(angle = 0, hjust=1))+
labs(title = "Attendance Codes Used in First Semester by Year",
x = "Attendance Code",
y= "Number of Times Used",
fill= "Year")
#AVP stands for "absent virtual participation"; this essentially means that the student was absent from their class period for an unknown reason (no parent contact, Dr note, etc). This code was introduced in 2020 due to the shift to distance learning. In regular year, an unknown reason for an absence is documented using the code UNV which stands for unverified. This plot is showing the dramatic increase in total number of unknown absences for the first semester of 2020 vs the total number for the first semester of 2019. With all of these absences, we were curious to see what the impact was on academic performance.
gpa_2_long <- readr::read_csv("gpa_2_long.csv")
ui <- dashboardPage(skin ="black",
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "1"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2019"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa_2_long %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_density(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
#Term 1 represents progress report grades and Term 2 is the final semester grade received. This shinyApp shows the trends for each grade level by term and year.
