shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Attendance Rates, Enrollment and Withdrawal Data by Month"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates", "Enrollment and Withdrawal Data by Month", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
filter(month==input$x & attendance_rate_percent==input$y) %>%
ggplot(aes(x=month, fill=year)) +
geom_histogram()+
#facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Month", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Attendance Rates, Enrollment and Withdrawal Data by Month"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates", "Enrollment and Withdrawal Data by Month", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
filter(month==input$x & attendance_rate_percent==input$y) %>%
ggplot(aes(x=month, fill=year)) +
geom_histogram()+
#facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Month", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(virtualed)
View(codesmonth)
virtualed <- merge(attrates, codesmonth,by="year")
virtualed
View(virtualed)
ui <- dashboardPage(
dashboardHeader(title = "Attendance Rates, Enrollment and Withdrawal Data by Month"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates", "Enrollment and Withdrawal Data by Month", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
virtualed %>%
filter(month==input$x & attendance_rate_percent==input$y) %>%
ggplot(aes(x=month, fill=year)) +
geom_histogram()+
#facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Month", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Attendance Rates, Enrollment and Withdrawal Data by Month"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Term", choices = c("attendance_rate_percent", "student_add", "student_drop"),
selected = "attendance_rate_percent"),
), # close the first box
box(title = "Attendance Rates", "Enrollment and Withdrawal Data by Month", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
virtualed %>%
filter(month.x==input$x & attendance_rate_percent==input$y) %>%
ggplot(aes(x=month.x, fill=year)) +
geom_histogram()+
#facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Month", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21 "),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "year"), selected="year"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attrates %>%
ggplot(aes_string(x = "month", y = "attendance_rate_percent", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
codesmonth<- readr::read_csv("ATTENDANCE CODES BY MONTH.csv")
codesmonth<- janitor::clean_names(codesmonth)
codesmonth
attjoined<- merge(attrates, codesmonth,by=c("month", "year"))
attjoined$year <- as.numeric(attjoined$year)
attjoined
ui <- dashboardPage(
dashboardHeader(title = "GPA Stuff"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Month", choices = c("1", "2", "3", "4", "5"),
selected = "1"),
selectInput("y", "Select Factor", choices = c("student_attedance_percent", "student_add","student_drop", "used"),
selected = "student_attendance_percent"),
), # close the first box
box(title = "GPA Stuff", width=7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
attjoined <- renderPlot({
term_gpa_even_longer %>%
filter(month==input$x & number_of_students==input$y) %>%
ggplot(aes(x=month, fill=code)) +
geom_histogram()+
facet_wrap(~year)+
#geom_col(color="black", fill="slateblue2", alpha=1)+
theme_gdocs()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#labs(x = "Data for Choice", y = "Number in Category")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px")))))
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))))
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px")))
ui <- dashboardPage(
dashboardHeader(title = "First Semester Attendance Rates 19/20 vs 20/21"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("attendance_rate_percent", "student_add", "student_drop", "used"), selected = "attendance_rate_percent"),
plotOutput("plot", width = "500px", height = "400px")))
dashboardBody(
selectInput("x", "Select Filter", choices=c("month", "code"), selected="code"),
plotOutput("plot", width = "500px", height = "400px"))
server <- function(input, output, session) {
output$plot <- renderPlot({
attjoined %>%
ggplot(aes_string(x = "month", y = input$y, fill=code)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "Attendance and Enrollment by month", x="Attendance Month", y="Number of Students", fill = "Legend")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "2"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2020"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
term_gpa_even_longer %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "2"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2020"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa2 %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
gpa2
gpa_2_long <- gpa2 %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa"
)
gpa_2_long <- gpa2 %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa"
)
gpa_2_long
gpa_2_long <- gpa2 %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa") %>%
rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2 %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
gpa_2_long
gpa_2 %>% rename('1'= term_1, '2' = term_2)
gpa_2 %>% rename('1'= term_1, '2' = term_2)
gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2 %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
gpa_2_long
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
gpa_2_long
ui <- dashboardPage(
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "2"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2020"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa_2_long %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
gpa2_x <- gpa2 %>% rename('1'= term_1, '2' = term_2)
gpa_2_long <- gpa2_x %>%
pivot_longer(
3:4,
names_to="term",
values_to = "gpa")
write.csv(gpa_2_long, "gpa_2_long.csv")
ui <- dashboardPage(
dashboardHeader(title = "GPA Shiny App"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 2,
radioButtons("x", "Select Grade", choices = c("6", "7", "8"),
selected = "6"),
radioButtons("y", "Select Term", choices = c("1", "2"),
selected = "2"),
radioButtons("z", "Select Year", choices = c("2019", "2020"),
selected = "2020"),
), # close the first box
box(title = "GPA Data From Years 19-20 and 20-21", width=8,
plotOutput("plot", width = "700px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
gpa_2_long %>%
filter(grade==input$x & term==input$y & year==input$z) %>%
ggplot(aes(x=gpa, fill=year)) +
geom_histogram(color="black", fill="darkcyan", alpha=.5)+
theme_gdocs()+
labs(x="GPA", y="Student Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
runApp('GPA_Shiny_App')
runApp('GPA_Shiny_App')
runApp('GPA_Shiny_App')
runApp('GPA_Shiny_App')
runApp('GPA_Shiny_App')
